name: publish

on:
  - push

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      publish-options: ${{ steps.publish.outputs.options }}
    timeout-minutes: 5
    steps:
      - id: publish
        run: |
          set -x
          if [ "$GITHUB_REF_TYPE" == 'tag' ] && [[ "$GITHUB_REF_NAME" =~ ^v.* ]]
          then
            echo 'options=' | tee -a "$GITHUB_OUTPUT"
          else
            echo 'options=--dry-run' | tee -a "$GITHUB_OUTPUT"
          fi
  jsr:
    name: jsr ${{ needs.setup.outputs.publish-options }}
    needs: setup
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: denoland/setup-deno@4606d5cc6fb3f673efd4f594850e3f4b3e9d29cd # v2.0.0
        with:
          deno-version: v2.x
      - run: deno install --frozen
      - run: deno publish ${{ needs.setup.outputs.publish-options }}
  npm:
    name: npm ${{ needs.setup.outputs.publish-options }}
    needs: setup
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4.1.0
        with:
          node-version: 22
          registry-url: 'https://registry.npmjs.org'
      - run: npm ci --ignore-scripts
      - run: npm rebuild && npm run prepare --if-present
      - run: npm publish ${{ needs.setup.outputs.publish-options }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
  release:
    needs:
      - jsr
      - npm
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - run: gh release create '${{ github.ref_name }}' --generate-notes --verify-tag
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true
